// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User Model
model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String     @unique
  password  String
  name      String
  role      Role       @default(ADMIN)
  blogPosts BlogPost[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

// Blog Post Model
model BlogPost {
  id             Int      @id @default(autoincrement())
  title          String
  slug           String   @unique
  content        String   @db.Text
  excerpt        String?
  featuredImage  String?
  isFeatured     Boolean  @default(false)
  views          Int      @default(0)
  tags           String[]
  category       String?
  authorUsername String
  author         User     @relation(fields: [authorUsername], references: [username], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("blog_posts")
}

// Project Model
model Project {
  id             Int      @id @default(autoincrement())
  title          String
  image          String
  projectType    String
  projectSummary String
  gitHubLink     String
  liveSiteLink   String
  technologies   String[]
  details        String[]
  images         String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("projects")
}

enum Role {
  ADMIN
}
